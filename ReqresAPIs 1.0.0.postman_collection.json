{
	"info": {
		"_postman_id": "f6e617ca-97ef-4e04-9a9f-803a874ea4af",
		"name": "ReqresAPIs 1.0.0",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "23851139",
		"_collection_link": "https://blue-astronaut-542309.postman.co/workspace/Barbarosa2024~032f5ce7-9f96-40f9-9a24-b283cd018962/collection/23851139-f6e617ca-97ef-4e04-9a9f-803a874ea4af?action=share&source=collection_link&creator=23851139"
	},
	"item": [
		{
			"name": "Users",
			"item": [
				{
					"name": "List Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var jsondata = pm.response ; \r",
									"\r",
									"//Testing the response code \r",
									"pm.test(\"Status code is 200\",function()\r",
									"{pm.expect(jsondata.code).to.equal(200)})\r",
									"//------------------------------------\r",
									"//Testing the status \r",
									" pm.test(\"Validate on the status Ok\", function(){\r",
									"pm.expect(jsondata.status).to.include(\"OK\")\r",
									"})\r",
									"//---------------------------------------\r",
									"// Testing the response time \r",
									"pm.test(\"The time response is below 1000 ms\", function()\r",
									"{pm.expect(jsondata.responseTime).to.below(1000)})\r",
									"\r",
									"//-------------------------------------\r",
									"pm.test(\"Validate that the response size within\", function(){\r",
									"pm.expect(jsondata.responseSize).to.be.within(3,900000000)})\r",
									"//-------------------------------\r",
									"// Testing the content type header as json \r",
									"\r",
									"pm.test(\"Testing the json content type \", function(){\r",
									"pm.expect(jsondata.headers.get(\"Content-Type\")).to.include(\"application/json; charset=utf-8\")\r",
									"}) \r",
									"//--------------------------------------------------\r",
									"//testing the resposne body for every value \r",
									"// Testing the page value \r",
									"\r",
									"pm.test(\"The value of the page is 2\", function(){\r",
									" pm.expect(jsondata.json().page).to.equal(2)\r",
									"})\r",
									"//-----------------------------------------------------\r",
									"// Testing the per page \r",
									"pm.test(\"the value per page is = \", function(){\r",
									"pm.expect(jsondata.json().per_page).to.equal(6)})\r",
									"\r",
									"//-------------------------------------- \r",
									"// Testing the total number = 12 ; \r",
									"pm.test(\"Validate on the total number = 12\", function(){\r",
									"pm.expect(jsondata.json().total).to.equal(12)\r",
									"})\r",
									"//--------------------------------------------\r",
									"// Validating on the total pages = 2\r",
									"pm.test(\"Validate on the total pages =2 \", function(){\r",
									"pm.expect(jsondata.json().total_pages).to.equal(2)  \r",
									"})\r",
									"// --------------------------------------------\r",
									"// Validate on the data.id= 7 \r",
									"pm.test(\"validate on the data.id = 7 \")\r",
									"pm.expect(jsondata.json().data[0].id).to.equal(7)\r",
									"//----------------------------------------\r",
									"\r",
									"\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "New Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"console.log(pm.response.responseTime)"
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "https://reqres.in/api/users?page=2",
							"protocol": "https",
							"host": [
								"reqres",
								"in"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"item": []
		},
		{
			"name": "Resources",
			"item": []
		}
	]
}